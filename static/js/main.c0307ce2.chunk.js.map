{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","amount","title","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","datapointvalues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilterYear","filteredExpenses","items","filter","toString","filteredContent","color","textAlign","length","id","ExpenseFilter","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","SetIsEditing","enteredExpenseData","console","log","random","onAddExpense","Dummy_Expenses","App","setExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0307ce2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ExpenseDate.css'\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US',{month:'long'})\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'})\r\n    const year = props.date.getFullYear()  \r\n    \r\n    return(\r\n        <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      \r\n  </div>\r\n  \r\n    )\r\n}\r\nexport default ExpenseDate","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import './ExpenseItem.css'\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card'\r\nimport React from 'react'\r\n\r\nconst ExpenseItem = (props)=> {\r\n    \r\n  return (\r\n      <Card className=\"expense-item\">\r\n          \r\n          <ExpenseDate date={props.date} amount={props.amount} title={props.title}/>\r\n  <div className=\"expense-item__description\">\r\n      <h2>{props.title}</h2>\r\n      <div className=\"expense-item__price\">${props.amount}</div>\r\n  </div>\r\n  \r\n  </Card>\r\n    );\r\n}\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler=(event)=>{\r\n        props.onChangeFilter(event.target.value)\r\n    }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from \"react\"\r\nimport './ChartBar.css'\r\nconst ChartBar=props=>{\r\n    let barFillHeight='0%';\r\n    if(props.maxValue>0){\r\n        barFillHeight=Math.round((props.value/props.maxValue)*100)\r\n    }\r\nreturn(\r\n    <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n       </div>\r\n       <div className=\"chart-bar__label\">{props.label}</div>\r\n      \r\n        \r\n    </div>\r\n)\r\n}\r\nexport default ChartBar;","import React from 'react'\r\nimport ChartBar from './ChartBar'\r\nimport './Chart.css'\r\nconst Chart=(props)=>{\r\n    const datapointvalues=props.dataPoints.map((dataPoint)=>dataPoint.value)\r\n    const totalMaximum=Math.max(...datapointvalues)\r\n    return(\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint)=>{\r\n                return <ChartBar value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} key={dataPoint.label}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React from \"react\"\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart=props=>{\r\n    const chartDataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0},\r\n\r\n    ]\r\nfor(const expense of props.expenses){\r\n    const expenseMonth=expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value+=expense.amount;\r\n}\r\n    return(\r\n        <Chart dataPoints={chartDataPoints}/>\r\n    )\r\n}\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilterYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilterYear(selectedYear);\r\n  };\r\n  const filteredExpenses=props.items.filter(expense=>{\r\n      return expense.date.getFullYear().toString()===filteredYear;\r\n  })\r\n  let filteredContent=<p style={{color:\"white\",textAlign:\"center\"}}>No Expenses Found</p>\r\n  if(filteredExpenses.length>0){\r\n      filteredContent=filteredExpenses.map((expense) => { \r\n        return <ExpenseItem\r\n           key={expense.id}\r\n           title={expense.title}\r\n           amount={expense.amount}\r\n           date={expense.date}\r\n         />;\r\n       })}\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n     {filteredContent}\r\n      \r\n    </Card>\r\n  );\r\n};\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    //From here we are calling \"saveExpensHandler\" function of NewExpense.js\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import React,{useState} from 'react'\r\nimport './NewExpense.css'\r\nimport ExpenseForm from'./ExpenseForm'\r\n\r\nconst NewExpense=(props)=>{\r\n    const [isEditing,SetIsEditing]=useState(false)\r\n    //saveExpenseDataHandler is being called when the form is being submitted in ExpenseForm.js\r\n    const saveExpenseDataHandler=(enteredExpenseData)=>{\r\n        console.log(\"In NewExpense printing enteredExpenseData\",enteredExpenseData)\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id:Math.random().toString()\r\n        }\r\n        //from here we are calling addExpenseHandler function of App.js\r\n        props.onAddExpense(expenseData)\r\n        SetIsEditing(false)\r\n    }\r\n    const startEditingHandler=()=>{\r\n        SetIsEditing(true);\r\n    }\r\n    const stopEditing=()=>{\r\n        SetIsEditing(false)\r\n    }\r\n    return(\r\n        <div className=\"new-expense\">\r\n            {!isEditing?<button onClick={startEditingHandler}>Add New Expense</button>:<ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditing}/>}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default NewExpense","\nimport Expenses from './components/Expenses/Expenses'\nimport React,{useState} from 'react'\nimport NewExpense from './components/NewExpense/NewExpense';\nconst Dummy_Expenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n]\nfunction App() {\n  const [expenses,setExpense]=useState(Dummy_Expenses)\n  //addExpenseHandler function is being called from the NewExpense.js when the new data is being inserted.\n  const addExpenseHandler=(expense)=>{\n    console.log(\"In App.js in App function event print\",expense)\n  //when we want to update the state based on the previous state we pass a function to the state function which takes a parameter for previous\n  //state values and returns the current updated state and also previous state \n   setExpense(prevExpenses=>{\n    console.log(\"In App.js printing prevExpense\",prevExpenses)\n     return [expense,...prevExpenses]\n     \n   })\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n  <Expenses items={expenses}/>\n  \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}